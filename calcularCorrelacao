%spark
import org.apache.spark.ml.feature.VectorAssembler
import org.apache.spark.ml.linalg.{Matrix, Vectors}
import org.apache.spark.ml.stat.Correlation
import org.apache.spark.sql.Row

val pivoted_resulting_df = sql("select * from correlacao_l86_dias_de_chuva_2020_H").groupBy("dia").pivot("indice").sum("quantidade").orderBy("dia")

val assembler = new VectorAssembler().setInputCols(Array("faturamento_comchuva", "pluviometrico_comchuva")).setOutputCol("features")
val pivoted_resulting_featurized_df = assembler.transform(pivoted_resulting_df.na.fill(0, Array("faturamento_comchuva", "pluviometrico_comchuva")))

val Row(coeff1: Matrix) = Correlation.corr(pivoted_resulting_featurized_df, "features").head
